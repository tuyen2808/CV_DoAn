#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_HoaTuoi.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BanHoa")]
	public partial class QL_BanHoaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    partial void InsertCHUNGLOAI(CHUNGLOAI instance);
    partial void UpdateCHUNGLOAI(CHUNGLOAI instance);
    partial void DeleteCHUNGLOAI(CHUNGLOAI instance);
    partial void InsertCT_HOADON(CT_HOADON instance);
    partial void UpdateCT_HOADON(CT_HOADON instance);
    partial void DeleteCT_HOADON(CT_HOADON instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    #endregion
		
		public QL_BanHoaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_BanHoaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BanHoaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BanHoaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BanHoaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BanHoaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
		
		public System.Data.Linq.Table<CHUNGLOAI> CHUNGLOAIs
		{
			get
			{
				return this.GetTable<CHUNGLOAI>();
			}
		}
		
		public System.Data.Linq.Table<CT_HOADON> CT_HOADONs
		{
			get
			{
				return this.GetTable<CT_HOADON>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USENAME;
		
		private string _PASS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSENAMEChanging(string value);
    partial void OnUSENAMEChanged();
    partial void OnPASSChanging(string value);
    partial void OnPASSChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USENAME", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USENAME
		{
			get
			{
				return this._USENAME;
			}
			set
			{
				if ((this._USENAME != value))
				{
					this.OnUSENAMEChanging(value);
					this.SendPropertyChanging();
					this._USENAME = value;
					this.SendPropertyChanged("USENAME");
					this.OnUSENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASS", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PASS
		{
			get
			{
				return this._PASS;
			}
			set
			{
				if ((this._PASS != value))
				{
					this.OnPASSChanging(value);
					this.SendPropertyChanging();
					this._PASS = value;
					this.SendPropertyChanged("PASS");
					this.OnPASSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTL;
		
		private string _TenTL;
		
		private string _DienGia;
		
		private EntitySet<CHUNGLOAI> _CHUNGLOAIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTLChanging(int value);
    partial void OnMaTLChanged();
    partial void OnTenTLChanging(string value);
    partial void OnTenTLChanged();
    partial void OnDienGiaChanging(string value);
    partial void OnDienGiaChanged();
    #endregion
		
		public THELOAI()
		{
			this._CHUNGLOAIs = new EntitySet<CHUNGLOAI>(new Action<CHUNGLOAI>(this.attach_CHUNGLOAIs), new Action<CHUNGLOAI>(this.detach_CHUNGLOAIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTL
		{
			get
			{
				return this._MaTL;
			}
			set
			{
				if ((this._MaTL != value))
				{
					this.OnMaTLChanging(value);
					this.SendPropertyChanging();
					this._MaTL = value;
					this.SendPropertyChanged("MaTL");
					this.OnMaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTL", DbType="NVarChar(50)")]
		public string TenTL
		{
			get
			{
				return this._TenTL;
			}
			set
			{
				if ((this._TenTL != value))
				{
					this.OnTenTLChanging(value);
					this.SendPropertyChanging();
					this._TenTL = value;
					this.SendPropertyChanged("TenTL");
					this.OnTenTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGia", DbType="NVarChar(50)")]
		public string DienGia
		{
			get
			{
				return this._DienGia;
			}
			set
			{
				if ((this._DienGia != value))
				{
					this.OnDienGiaChanging(value);
					this.SendPropertyChanging();
					this._DienGia = value;
					this.SendPropertyChanged("DienGia");
					this.OnDienGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_CHUNGLOAI", Storage="_CHUNGLOAIs", ThisKey="MaTL", OtherKey="MaTL")]
		public EntitySet<CHUNGLOAI> CHUNGLOAIs
		{
			get
			{
				return this._CHUNGLOAIs;
			}
			set
			{
				this._CHUNGLOAIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHUNGLOAIs(CHUNGLOAI entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = this;
		}
		
		private void detach_CHUNGLOAIs(CHUNGLOAI entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUNGLOAI")]
	public partial class CHUNGLOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCL;
		
		private string _TenCL;
		
		private int _MaTL;
		
		private string _AnhBia;
		
		private string _DienGia;
		
		private System.Nullable<decimal> _GiaBan;
		
		private EntitySet<CT_HOADON> _CT_HOADONs;
		
		private EntityRef<THELOAI> _THELOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCLChanging(int value);
    partial void OnMaCLChanged();
    partial void OnTenCLChanging(string value);
    partial void OnTenCLChanged();
    partial void OnMaTLChanging(int value);
    partial void OnMaTLChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnDienGiaChanging(string value);
    partial void OnDienGiaChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    #endregion
		
		public CHUNGLOAI()
		{
			this._CT_HOADONs = new EntitySet<CT_HOADON>(new Action<CT_HOADON>(this.attach_CT_HOADONs), new Action<CT_HOADON>(this.detach_CT_HOADONs));
			this._THELOAI = default(EntityRef<THELOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCL
		{
			get
			{
				return this._MaCL;
			}
			set
			{
				if ((this._MaCL != value))
				{
					this.OnMaCLChanging(value);
					this.SendPropertyChanging();
					this._MaCL = value;
					this.SendPropertyChanged("MaCL");
					this.OnMaCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenCL
		{
			get
			{
				return this._TenCL;
			}
			set
			{
				if ((this._TenCL != value))
				{
					this.OnTenCLChanging(value);
					this.SendPropertyChanging();
					this._TenCL = value;
					this.SendPropertyChanged("TenCL");
					this.OnTenCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTL", DbType="Int NOT NULL")]
		public int MaTL
		{
			get
			{
				return this._MaTL;
			}
			set
			{
				if ((this._MaTL != value))
				{
					if (this._THELOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTLChanging(value);
					this.SendPropertyChanging();
					this._MaTL = value;
					this.SendPropertyChanged("MaTL");
					this.OnMaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="NVarChar(MAX)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienGia", DbType="NVarChar(1000)")]
		public string DienGia
		{
			get
			{
				return this._DienGia;
			}
			set
			{
				if ((this._DienGia != value))
				{
					this.OnDienGiaChanging(value);
					this.SendPropertyChanging();
					this._DienGia = value;
					this.SendPropertyChanged("DienGia");
					this.OnDienGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUNGLOAI_CT_HOADON", Storage="_CT_HOADONs", ThisKey="MaCL", OtherKey="MaCL")]
		public EntitySet<CT_HOADON> CT_HOADONs
		{
			get
			{
				return this._CT_HOADONs;
			}
			set
			{
				this._CT_HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_CHUNGLOAI", Storage="_THELOAI", ThisKey="MaTL", OtherKey="MaTL", IsForeignKey=true)]
		public THELOAI THELOAI
		{
			get
			{
				return this._THELOAI.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI.Entity = null;
						previousValue.CHUNGLOAIs.Remove(this);
					}
					this._THELOAI.Entity = value;
					if ((value != null))
					{
						value.CHUNGLOAIs.Add(this);
						this._MaTL = value.MaTL;
					}
					else
					{
						this._MaTL = default(int);
					}
					this.SendPropertyChanged("THELOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.CHUNGLOAI = this;
		}
		
		private void detach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.CHUNGLOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HOADON")]
	public partial class CT_HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoCT;
		
		private System.Nullable<int> _SoHD;
		
		private System.Nullable<int> _MaCL;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<CHUNGLOAI> _CHUNGLOAI;
		
		private EntityRef<HOADON> _HOADON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoCTChanging(int value);
    partial void OnSoCTChanged();
    partial void OnSoHDChanging(System.Nullable<int> value);
    partial void OnSoHDChanged();
    partial void OnMaCLChanging(System.Nullable<int> value);
    partial void OnMaCLChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CT_HOADON()
		{
			this._CHUNGLOAI = default(EntityRef<CHUNGLOAI>);
			this._HOADON = default(EntityRef<HOADON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SoCT
		{
			get
			{
				return this._SoCT;
			}
			set
			{
				if ((this._SoCT != value))
				{
					this.OnSoCTChanging(value);
					this.SendPropertyChanging();
					this._SoCT = value;
					this.SendPropertyChanged("SoCT");
					this.OnSoCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", DbType="Int")]
		public System.Nullable<int> SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCL", DbType="Int")]
		public System.Nullable<int> MaCL
		{
			get
			{
				return this._MaCL;
			}
			set
			{
				if ((this._MaCL != value))
				{
					if (this._CHUNGLOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCLChanging(value);
					this.SendPropertyChanging();
					this._MaCL = value;
					this.SendPropertyChanged("MaCL");
					this.OnMaCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUNGLOAI_CT_HOADON", Storage="_CHUNGLOAI", ThisKey="MaCL", OtherKey="MaCL", IsForeignKey=true)]
		public CHUNGLOAI CHUNGLOAI
		{
			get
			{
				return this._CHUNGLOAI.Entity;
			}
			set
			{
				CHUNGLOAI previousValue = this._CHUNGLOAI.Entity;
				if (((previousValue != value) 
							|| (this._CHUNGLOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUNGLOAI.Entity = null;
						previousValue.CT_HOADONs.Remove(this);
					}
					this._CHUNGLOAI.Entity = value;
					if ((value != null))
					{
						value.CT_HOADONs.Add(this);
						this._MaCL = value.MaCL;
					}
					else
					{
						this._MaCL = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUNGLOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CT_HOADON", Storage="_HOADON", ThisKey="SoHD", OtherKey="SoHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CT_HOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CT_HOADONs.Add(this);
						this._SoHD = value.SoHD;
					}
					else
					{
						this._SoHD = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoHD;
		
		private System.DateTime _NgaLap_HD;
		
		private int _MaKH;
		
		private EntitySet<CT_HOADON> _CT_HOADONs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDChanging(int value);
    partial void OnSoHDChanged();
    partial void OnNgaLap_HDChanging(System.DateTime value);
    partial void OnNgaLap_HDChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    #endregion
		
		public HOADON()
		{
			this._CT_HOADONs = new EntitySet<CT_HOADON>(new Action<CT_HOADON>(this.attach_CT_HOADONs), new Action<CT_HOADON>(this.detach_CT_HOADONs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SoHD
		{
			get
			{
				return this._SoHD;
			}
			set
			{
				if ((this._SoHD != value))
				{
					this.OnSoHDChanging(value);
					this.SendPropertyChanging();
					this._SoHD = value;
					this.SendPropertyChanged("SoHD");
					this.OnSoHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaLap_HD", DbType="Date NOT NULL")]
		public System.DateTime NgaLap_HD
		{
			get
			{
				return this._NgaLap_HD;
			}
			set
			{
				if ((this._NgaLap_HD != value))
				{
					this.OnNgaLap_HDChanging(value);
					this.SendPropertyChanging();
					this._NgaLap_HD = value;
					this.SendPropertyChanged("NgaLap_HD");
					this.OnNgaLap_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CT_HOADON", Storage="_CT_HOADONs", ThisKey="SoHD", OtherKey="SoHD")]
		public EntitySet<CT_HOADON> CT_HOADONs
		{
			get
			{
				return this._CT_HOADONs;
			}
			set
			{
				this._CT_HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _TenKH;
		
		private string _MatKhau;
		
		private string _MST;
		
		private string _DiaChi;
		
		private string _GioiTinh;
		
		private string _SDT;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMSTChanging(string value);
    partial void OnMSTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(80)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(80)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(80)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MST", DbType="NVarChar(20)")]
		public string MST
		{
			get
			{
				return this._MST;
			}
			set
			{
				if ((this._MST != value))
				{
					this.OnMSTChanging(value);
					this.SendPropertyChanging();
					this._MST = value;
					this.SendPropertyChanged("MST");
					this.OnMSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
}
#pragma warning restore 1591
